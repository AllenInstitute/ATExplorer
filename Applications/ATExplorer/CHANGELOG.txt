Release 0.7.0 (Nov 12)
=======================
* Cleaning up renderproject, client classes somewhat
* Got managing renderservices code finished
* Added mac startup docker script
* Removed Testing/ATIFData/ folder
* Bunch of work on setting up renderhosts and renderbackends and their properties..
* Made embedded python code look smaller in the manual
* worked on infra structure (RenderServices and RenderBackends)
* Added ability to inspect stateTable files in the UI
* Cleaning up some code structures (doxygen)

Release 0.6.9 (Oct 29)
=======================
* Worked on manual
* Added at_modules as a submodule
* Moved pipeline scripts to atPipeline repo
* Working on pipeline scripts
* Created an ATExplorer "super class"
* Created container to hold renderhosts
* Added 'pipeline files'
* Added scripts and templates from leilas pipeline folder
* Created code for Creating ACQ Render stacks
* Debugging median calculation Scripts
* Changed RenderPython apps module to point to AllenInstitute Repo

Release 0.6.8 (Oct 18)
=======================
* Added stuff in the DockerDataFolder pipeline folder
* Got generation of statetable files working from within the UI
* Added toc for manual appendix
* Worked on the tree view logic
* Cleaned up popup mechanisms when clicking on treeview nodes
* Re enabled renderprojects in the tree
* Fixed bugs in Observer design pattern code..
* moved code logic from the MainForm into the ProjectsTreeView class
* Removing some usage of pointers to object references
* Testing inheriting from ATData in ATIFDataProject to ease usage of a ATIFDataProject object
* Refactoring
* Moved sources out of ATExplorer APP to ATExplorer API's folder
* More ATData utilities and logic
* Added callbacks to monitor, give feedback when population of ATData
* Finished(?) implementing population of ATData
* Updated manual with a preface section, and separate documentfile
* Added an ATExplorer UI figure to manual to build on
* Getting python working with smart pointers..
* More conversions to shared pointers
* Getting data structures more finalized
* Converted to using shared pointers for sections and ribbons for easier book keeping
* Added test program for FileFolder traversing code
* Made all FileFolder code use shared pointers
* Refactoring FileFolder class to use shared pointers
* Created inheritance for "Tabbed Views"
* Setting up ATIFData tabbed view
* Worked on some problems with observer pattern..
* Added code for creation of ATIFData project
* Added testing code
* Setting up a test project for ATIFData import code
* Fixed renaming of open tabs, if changing name of a project leaf node
* Added unit atUtilities
* Added latex .gitignore
* Manual work..
* Added Latex skeleton for ATExplorer manual
* Fixed(?) killing of threads
* Added check of z indexes when creating stacks
* Added automatic checking of current stack when opening the create volumes form
* Updated version info in project file
* Fixed file dialog filters when opening and saving projects

Release 0.6.7 (Sept 19)
=======================
* Added RenderStackName to generated TIFF stacks
* Added a splitter to stackname listbox in CreateVolumes form
* RenderProject now have their own DataOutputfolder, that can be set upon creation as well as on the RenderProject form
* Removed Stacks and the "other' list boxes on the RenderProject form. Instead, they should become items in the treeview
* Fixed creation of atrenderproject bug
* Adding TiffStack registration to project file
* Mostly finished custom create tiffstacks form stuff
* Moved low level units to source/core of the API.
* Added check for ImageMagick convert.exe
* Organizing code into proper modules
* Added setting for ImageMagick path
* Moved bunch of units to package

Release 0.6.6 (Sept 6)
=======================
* Added popup menus to checkboxes on Renderproject pages
* Added code to open FileExplorer at certain items
* Re-enabled creation of stacks and maximum intensity projections
* Re enabled ROI CheckBox
* Fixed focus of tab sheets
* Starting developing ingesting of data
* Getting image viewing back into application
* More project handling logic
* Added Dummy observer class to assist the the ProjectObservers class
* Bunch of project changes
* More on viewing projects...
* Adding logic to remove sub projects
* More project selection logic
* Fixed application Icon Issue
* Added auto selection of settings node
* Getting a hold on properties
* Creating infrastructure for dealing with properties and options
* Moving properties to AppUtilites class
* Setting up settings
* Switch to use new ApplicationUtilities class for globals
* Added maxtilespecs parameter for the multiple fetch thread
* Changed submodule to use renderpython apps fork
* Created a RenderService parameters class
* Keeping browser hidden for now
* Fixed build script

Release 0.6.5 (Aug 14)
=======================
* Added a RenderLocalCache class
* Added lists for selected ROIs
* Added a bunch of low level utility functions
* Implementing concept of ROI's
* Moved out inline functions
* Reafctoring for faster builds
* Organizing UI to handle large amounts of ROI's
* Adding stack and MIP creation actions
* Added ATExplorer document

Release 0.6.4 (Aug 6)
=======================
* Added ability to add transforms to render stacks, e.g. affine rotation
* Added image grid control
* Added custom image rotation code using GDI

Release 0.6.3 (July 27)
=======================
* Added an embedded chromium control for ndviz
* Adding code for remote scripting
* Removed creation of terrafly data
* Added a gitattributes file to preserve line endings build script
* Reorganising visual controls

Release 0.6.2 (April 10)
=======================
* Fixed flip image left and right (ImageMagic stuff).
* Removed obsolete files in source folder
* Updated postbuild script
* Changed render-clinet port from 8081 -> 8988
* Added a test render service button
* Changed to just use atCore module

Release 0.6.1 (March 22)
=======================
* Added styling
* Compiled with Tokyo

Release 0.6.0 (Jan 9)
=======================
* Added a "Extra Scale Factor" Edit box to deal with data having "weird" scale
* Hiding the project pane for now, until "projects" works

--- 2018 --------------
Release 0.5.9 (Nov 6)
=======================
* Fixed generation of stack script to work with latest renderclient code
* Added ability to choose 8, 16 and 24 bit TIFFS when creating stacks
* Removed convert to gray check box
* Creating a project manager

Release 0.5.8 (Oct 16)
=======================
* Added flags for padding seroes and convert to gray
* Many changes to project views (not employed yet)
* Got treeview functionality partly implemented
* Added new ssh frame for terafly creation
* Integrating paraconverter script remote running
* Added frame for Paraconversion connection

Release 0.5.7 (June 23)
=======================
* Fixed use static bounds checkbox and generation of stacks using layer bounds
* Added ability to set z batch size and number of jobs size
* Added ability to set priority of remote jobs, using nice parameter
* Fixed some frontpage UI issues
* Added saving/retrieving of remote server connection data
* Added ability to select creation of TIFF Stack
* Added ability to remove individual TIFFS, in case a stack is created
* Added some new styles
* Added an overlay image form

Release 0.5.6 (May 22)
=======================
* Added flip right (and left)
* Adding a Cloned Image Form
* Re-added tracking of zoom history
* Added ability to pan image (by using mouse middle button)
* Added custom filtering of stacks on stack generation page

Release 0.5.5 (May 17)
=======================
* Changed so that z's are checked as their default state
* Fixed bug when image has negative boundaries
* Added experimental colorizing functions
* Added experimental post processing functions (contrast control)
* Added ability to downsample z values (on the Select/Unselect z's form)
* Added buttons to "interact" with NDVIZ
* Added simple stacks filter on Stack creation page
* Added about form showing the ChangeLog

Release 0.5.4 (May 11)
=======================
* Added 3 themes files
* Added logic to switch runtime application theme
* Added ability to filter stacks
* Replaced (hidden) UI project controls with internal properties

Release 0.5.3 (May 9)
=======================
* Re-added ability to select custom sections
* Changed backend so image fetching is always done in a background thread
* Added GetchImageThread unit and RenderClientUtils unit
* Various refactoring

Release 0.5.2 (May 4)
=======================
* New version - multi stack creation enabled
* Added saving of create volume parameters
* Added a checklist box to hold checked stacks when generating multi stacks

Release 0.5.1 (May 3)
=======================
* Added ability to set min and maxintensity for fetched sections from Render
* Added some DICOM data
* Restructured source files
* Added control of cache thread
* Many updates to UI
* Added a style
* Added remote stack creation over SSH
* Before employing remote SSH commands
* Added info files
* Creating a VolumeCreator release
* Cleaned up test UI
* Added finding of bounding box
* Renamed RenderService to client
* Added image fetching thread
* Added more processing stuff
* Added logging

Release 0.5.0 (March 10)
=======================
* Created an initial release


--- 2017 ---
